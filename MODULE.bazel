module(
    name = "monorepo",
    version = "0.0.1",
)

bazel_dep(name = "rules_swift", version = "2.4.0", repo_name = "build_bazel_rules_swift")
bazel_dep(name = "rules_apple", version = "3.18.0", repo_name = "build_bazel_rules_apple")
bazel_dep(name = "apple_support", version = "1.23.1", repo_name = "build_bazel_apple_support")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "rules_python", version = "1.6.3")
bazel_dep(name = "rules_go", version = "0.55.1")
bazel_dep(name = "gazelle", version = "0.36.0")
bazel_dep(name = "rules_python_gazelle_plugin", version = "1.6.3")
bazel_dep(name = "rules_uv", version = "0.88.0")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "aspect_rules_lint", version = "1.9.1")
bazel_dep(name = "bazel_skylib", version = "1.8.2")
bazel_dep(name = "rules_multirun", version = "0.13.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

# Download a suitable Go SDK.
go_sdk.download(version = "1.22.2")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(go_deps, "com_github_spf13_cobra")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.13",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    python_version = "3.13",
    requirements_lock = "//bazel/python:requirements.txt",
)
use_repo(pip, "pypi")

apple_cc_configure = use_extension("@build_bazel_apple_support//crosstool:setup.bzl", "apple_cc_configure_extension")
use_repo(apple_cc_configure, "local_config_apple_cc")

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "postgres",
    digest = "sha256:bc12e3cf19d08c8f2244ddb9a0c95dd9a51bd28b3742f11e4948f38a7be36d15",
    image = "index.docker.io/arm64v8/postgres",
    platforms = ["linux/arm64/v8"],
)
use_repo(oci, "postgres", "postgres_linux_arm64_v8")
